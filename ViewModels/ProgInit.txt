//PersonDTO libraryPerson = new PersonDTO()
            //{
            //    Access = Access.Library,
            //    Name = "Library",
            //    Surname = "Library",
            //    Birthday = DateTime.Now,
            //    BookDebt = new ObservableCollection<PrintedEditionOrderDTO>(),
            //    TakenBook = new ObservableCollection<PrintedEditionOrderDTO>()
            //};
            //AccauntDTO libraryAccaunt = new AccauntDTO() { Login = "Library", Password = "Library", Person = libraryPerson };
            //accauntService.Add(libraryAccaunt);

            //AccauntDTO libraryAccauntFromDB = accauntService.GetAll().Data.Find(a => a.Person.Access == Access.Library);

            //AuthorDTO ArmandoLucasCorrea = new AuthorDTO() { Name = "Armando", Surname = "Lucas", Birthday = DateTime.Now };
            //AuthorDTO JessKidd = new AuthorDTO() { Name = "Jess", Surname = "Kidd", Birthday = DateTime.Now };
            //AuthorDTO MarthaMcPhee = new AuthorDTO() { Name = "Martha", Surname = "McPhee", Birthday = DateTime.Now };
            //AuthorDTO MeganMiranda = new AuthorDTO() { Name = "Megan", Surname = "Miranda", Birthday = DateTime.Now };
            //AuthorDTO HelenPhillips = new AuthorDTO() { Name = "Helen", Surname = "Phillips", Birthday = DateTime.Now };
            //AuthorDTO KristinHarmel = new AuthorDTO() { Name = "Kristin", Surname = "Harmel", Birthday = DateTime.Now };

            //BookDTO Daughter = new BookDTO() { Name = "The Daughter's Tale", Rate = 4.5f, Authors = new ObservableCollection<AuthorDTO>() { ArmandoLucasCorrea } };
            //BookDTO Himself = new BookDTO() { Name = "Himself", Rate = 4.1f, Authors = new ObservableCollection<AuthorDTO>() { JessKidd } };
            //BookDTO GorgeousLies = new BookDTO() { Name = "Gorgeous Lies", Rate = 3.5f, Authors = new ObservableCollection<AuthorDTO>() { JessKidd, MarthaMcPhee } };
            //BookDTO Winemaker = new BookDTO() { Name = "The Winemaker’s Wife", Rate = 4.8f, Authors = new ObservableCollection<AuthorDTO>() { JessKidd } };
            //BookDTO TheDinnerList = new BookDTO() { Name = "The Dinner List", Rate = 1.9f, Authors = new ObservableCollection<AuthorDTO>() { KristinHarmel } };
            //BookDTO NormalPeople = new BookDTO() { Name = "Normal People", Rate = 4.9f, Authors = new ObservableCollection<AuthorDTO>() { HelenPhillips, MeganMiranda } };
            //BookDTO Kafka = new BookDTO() { Name = "Kafka on the Shore", Rate = 3.3f, Authors = new ObservableCollection<AuthorDTO>() { ArmandoLucasCorrea, KristinHarmel, JessKidd } };

            //List<BookDTO> bookDTOs = new List<BookDTO>()
            //{
            //    Daughter,
            //    Himself,
            //    GorgeousLies,
            //    Kafka,
            //    Winemaker,
            //    TheDinnerList,
            //    NormalPeople,
            //    NormalPeople,
            //    Kafka,
            //    Winemaker,
            //    Himself,
            //    GorgeousLies,
            //    Daughter
            //};

            //foreach (BookDTO bookDTO in bookDTOs)
            //{
            //    printedEditionOrderService.Add(new PrintedEditionOrderDTO()
            //    {
            //        PrintedEdition = bookDTO,
            //        StartDate = DateTime.Now,
            //        EndDate = DateTime.Now,
            //        TakenBookId = libraryAccauntFromDB.Person.Id,
            //    });
            //}

            //List<PrintedEditionOrderDTO> printedEditionOrderDTOs = printedEditionOrderService.GetAll().Data;

            //libraryAccauntFromDB.Person.TakenBook = new ObservableCollection<PrintedEditionOrderDTO>(printedEditionOrderDTOs);
            //accauntService.Update(libraryAccauntFromDB);

            //AccauntDTO libraryAccauntFromDBUpdated = accauntService.GetAll().Data.Find(a => a.Person.Access == Access.Library);

